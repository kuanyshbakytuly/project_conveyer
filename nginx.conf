events {
    worker_connections 4096;
}

http {
    upstream video_backend {
        server video-processor:8000;
        keepalive 64;
    }

    # WebSocket upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Main server block
    server {
        listen 80;
        server_name _;
        
        # Increase timeouts for video streaming
        client_body_timeout 60;
        client_header_timeout 60;
        keepalive_timeout 65;
        send_timeout 60;
        
        # Increase buffer sizes
        client_body_buffer_size 128k;
        client_max_body_size 10m;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 16k;
        
        # WebSocket specific settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # Disable buffering for WebSocket
        proxy_buffering off;
        
        # Main application
        location / {
            proxy_pass http://video_backend;
        }
        
        # WebSocket endpoints
        location ~ ^/ws/\d+$ {
            proxy_pass http://video_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://video_backend/health;
            access_log off;
        }
        
        # Static files (if any)
        location /static/ {
            alias /app/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # HTTPS server block (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     
    #     # Same location blocks as above
    # }
}